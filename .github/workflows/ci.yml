name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '.github/assets/**'
      - 'LICENSE'
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
    actions: write

jobs:
  ci:
    env:
      CARGO_TERM_COLOR: always
    strategy:
      fail-fast: false
      matrix:
        runner: [ubuntu-22.04, ubuntu-22.04-arm]

    name: CI (${{ runner.os }}-${{ runner.arch }})
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install nix
        uses: nixbuild/nix-quick-install-action@v33
      
      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v6
        id: nix-cache
        with:
          primary-key: nix-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-${{ runner.arch }}-
          gc-max-store-size-linux: 5368709000 
          purge: true
          purge-prefixes: nix-${{ runner.os }}-${{ runner.arch }}-
          purge-created: 0
          purge-primary-key: never
    
      - name: Run code checks 
        run: nix flake check

      - name: Build docker image
        run: |
          # TODO: Move this to nix in order to have a singular source of truth for available features
          features=('blog' '')
          for feature_set in "${features[@]}"; do
            nix develop -c docker build -t ssh-portfolio --build-arg CARGO_FEATURES=$feature_set .
          done
